var l=Object.defineProperty;var p=(s,t,e)=>t in s?l(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var o=(s,t,e)=>(p(s,typeof t!="symbol"?t+"":t,e),e);import{i as d}from"./entry.C2lZ5bbK.js";import{P as c}from"./Navigation.lIIe-gxl.js";import{g as m}from"./teams.CjkJT0RS.js";import{r,h as i}from"./util.CAVBFLwC.js";const g="image://data:image/svg+xml,%3Csvg width='45.698mm' height='61.553mm' viewBox='0 0 45.698 61.553' xml:space='preserve' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform='translate(-79.874 -58.124)'%3E%3Cpath d='m100.28 61.023c-3.835 8.5188-10.386 15.712-16.008 23.11-4.4816 5.7522-5.7891 13.939-2.7528 20.652 3.5246 8.9683 12.938 15.909 22.798 14.769 11.927-1.0722 22.485-12.465 21.138-24.657-0.86595-8.0903-6.5908-14.352-11.555-20.346-3.3094-4.2071-6.4102-8.6853-8.6448-13.555-1.7625-3.8413-3.2412-3.8264-4.976 0.02693z' fill='%23b91c1c' stop-color='%23000000' stroke-linecap='round' stroke-linejoin='round' stroke-miterlimit='0' stroke-width='.85024' style='paint-order:markers stroke fill'/%3E%3C/g%3E%3C/svg%3E";class u{constructor(t,e,a){o(this,"value");this.value=[t,e,a?g:"square",a?12:4]}}function y(s){let t=[];for(let e of s.solves)t.push(new u(e.time,e.points,e.firstSolve));return{type:"line",name:s.teamId,symbol:(e,a)=>e[2],symbolSize:(e,a)=>e[3],lineStyle:{},data:t,yAxisIndex:0}}function h(s){const t={grid:{left:20,right:40,containLabel:!0},dataZoom:[{id:"x",xAxisIndex:[0],type:"inside",filterMode:"none"},{id:"xAxis",type:"slider"}],legend:{top:"top",type:"scroll"},xAxis:{type:"time",min:"dataMin",max:"dataMax"},yAxis:{type:"value",max:s[0].points},tooltip:{trigger:"axis",axisPointer:{type:"cross",snap:!0},confine:!0},series:s.map(e=>y(e)),backgroundColor:"rgba(0,0,0,0)"};return s.length>0&&Array.isArray(t.series)&&(t.series[0].markLine={symbol:"none",lineStyle:{type:"dotted",color:"gray",width:2},label:{show:!0,color:"gray",formatter:e=>e.name,position:"insideMiddleTop"},silent:!0,data:[{yAxis:s[0].points,name:"Skill Ceiling"}]}),t}const x=async s=>{const t=await r(s,"POST","/scoreboard/graph");return i(t,[])},A=async s=>{const t=await x(s);return t.data?t.data.length>0?(t.data.sort((a,n)=>n.points-a.points),{data:h(t.data)}):{data:null}:t},S=async()=>{await d(`${c}/scoreboard/graph`)},C=async s=>{const t=await m(s);return t.data&&(t.data=t.data.filter(e=>e.points>0).sort((e,a)=>a.points-e.points||(e.lastSolve??0)-(a.lastSolve??0))),t},E=async s=>{const t=await r(s,"GET","/socket/solves");return i(t,[])};export{C as a,A as b,E as g,S as i};
